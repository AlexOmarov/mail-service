version: '3.9'

services:
  service:
    build:
      context: .
    container_name: service
    depends_on:
      - db
      - kafka
      - zipkin
    environment:
      contour.cache.host: redis
      contour.cache.port: 6379
      contour.mail.host: mailslurper
      contour.mail.username: user@mail.ru
      contour.mail.password: password
      contour.mail.port: 2500
      contour.database.host: db
      contour.database.port: 5432
      contour.database.name: mail_service
      contour.database.schema: mail_service
      contour.database.password: mail_service
      contour.database.user: mail_service
      spring.profiles.active: dev
      CONSOLE_LOG_JSON: true
    ports:
      - "8080:8080"
      - "9091:9090"
      - "9010:9010"
      - "7001:7001"

  db:
    image: postgres
    container_name: db
    restart: always
    ports:
      - "7000:5432"
    environment:
      POSTGRES_PASSWORD: mail_service
      POSTGRES_USER: mail_service
      POSTGRES_DB: mail_service
    volumes:
      - pg_data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
    ports:
      - "2181:2181"
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-txn-logs:/var/lib/zookeeper/log
      - zk-secrets:/etc/zookeeper/secrets

  kafka:
    image: confluentinc/cp-enterprise-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    volumes:
      - kafka-data:/var/lib/kafka/data
      - kafka-secrets:/etc/kafka/secrets

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui
    ports:
      - "9001:8080"
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_JMXPORT: 9997

  schema-registry:
    image: confluentinc/cp-schema-registry
    depends_on:
      - kafka
    environment:
      SCHEMA_REGISTRY_HOST_NAME: localhost
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:6005
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:9092'
    ports:
      - "6005:6005"
    volumes:
      - schema-registry-secrets:/etc/schema-registry/secrets

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "4002:80"

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
  kibana:
    image: kibana:8.10.2
    ports:
      - "5601:5601"
    expose:
      - "5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200

  elasticsearch:
    image: elasticsearch:8.10.2
    environment:
      - discovery.type=single-node
      - node.name=elastic
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  logstash:
    image: logstash:8.10.2
    ports:
      - '25826:25826'
      - '5046:5046'
    volumes:
      - ./config/elk/logstash/pipelines.yaml:/usr/share/logstash/config/pipelines.yml:ro
      - ./config/elk/logstash/pipelines:/usr/share/logstash/pipeline:ro

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus_data:/var/lib/prometheus

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - 'GF_INSTALL_PLUGINS=grafana-clock-panel'
      - 'GF_SECURITY_ADMIN_USER=admin'
      - 'GF_SECURITY_ADMIN_PASSWORD=admin'
    volumes:
      - grafana_data:/var/lib/grafana

  mock-server:
    image: mockserver/mockserver
    ports:
      - "5001:1080"
    environment:
      MOCKSERVER_LOG_LEVEL: TRACE
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/init.json
    volumes:
      - ./config/mockserver:/config

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    entrypoint: redis-server --appendonly yes --requirepass 123 --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  mailslurper:
    container_name: mailslurper
    image: marcopas/docker-mailslurper:latest
    restart: always
    ports:
      - "25:25"
      - "2500:2500"
      - "8085:8085"
      - "8083:8080"


volumes:
  pg_data: { }
  zk-data: { }
  zk-txn-logs: { }
  zk-secrets: { }
  pgadmin: { }
  sonarqube_data: { }
  sonarqube_extensions: { }
  sonarqube_logs:
  kafka-data: { }
  kafka-secrets: { }

  schema-registry-secrets: { }

  grafana_data: { }
  prometheus_data: { }
  elasticsearch_data: { }

  redis_data: { }