#
# This file has been generated by Gradle and is intended to be consumed by Gradle
#
[metadata]
format.version = "1.1"

[versions]
awaitility = "4.2.0"
detekt = "1.23.4"
grpc-kotlin = "1.3.0"
jackson = "2.15.2"
junit = "5.10.1"
kotlin = "1.9.21"
kotlinx-coroutines = "1.7.2"
kover = "0.7.5"
logstash-logback-encoder = "7.4"
micrometer = "1.12.0"
micrometer-context-propagation = "1.1.0"
micrometer-reactor = "1.1.0"
micrometer-tracing = "1.2.0"
mockito = "5.1.0"
mockk = "1.13.8"
protobuf-kotlin = "3.23.4"
r2dbc-postgresql = "1.0.2.RELEASE"
reactor-kotlin-extensions = "1.2.2"
shedlock = "5.10.0"
sonarqube = "4.0.0.2929"
spring-boot = "3.2.0"
spring-security = "6.2.1"
spring-dependency-management = "1.1.3"
spring-grpc = "2.14.0.RELEASE"
springdoc = "2.2.0"
testcontainers = "1.19.3"
testcontainers-redis = "2.0.1"
janino = "3.1.11"
hessian = "4.0.66"

[libraries]
awaitility = { group = "org.awaitility", name = "awaitility-kotlin", version.ref = "awaitility" }
detekt-ktlint = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "detekt" }
flyway-core = { group = "org.flywaydb", name = "flyway-core", version = "" }
grpc-client-spring-boot-starter = { group = "net.devh", name = "grpc-client-spring-boot-starter", version.ref = "spring-grpc" }
grpc-kotlin-stub = { group = "io.grpc", name = "grpc-kotlin-stub", version.ref = "grpc-kotlin" }
grpc-spring-boot-starter = { group = "net.devh", name = "grpc-spring-boot-starter", version.ref = "spring-grpc" }
jackson-annotations = { group = "com.fasterxml.jackson.core", name = "jackson-annotations", version.ref = "jackson" }
jackson-core = { group = "com.fasterxml.jackson.core", name = "jackson-core", version.ref = "jackson" }
jackson-databind = { group = "com.fasterxml.jackson.core", name = "jackson-databind", version.ref = "jackson" }
junit-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit" }
junit-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit" }
kotlin-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlin-coroutines-reactive = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-reactive", version.ref = "kotlinx-coroutines" }
kotlin-coroutines-reactor = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-reactor", version.ref = "kotlinx-coroutines" }
kotlin-extensions = { group = "io.projectreactor.kotlin", name = "reactor-kotlin-extensions", version.ref = "reactor-kotlin-extensions" }
kotlin-jackson = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin", version.ref = "jackson" }
logstash-logback-encoder = { group = "net.logstash.logback", name = "logstash-logback-encoder", version.ref = "logstash-logback-encoder" }
micrometer = { group = "io.micrometer", name = "micrometer-core", version.ref = "micrometer" }
micrometer-context-propagation = { group = "io.micrometer", name = "context-propagation", version.ref = "micrometer-context-propagation" }
micrometer-reactor = { group = "io.projectreactor", name = "reactor-core-micrometer", version.ref = "micrometer-reactor" }
micrometer-registry-prometheus = { group = "io.micrometer", name = "micrometer-registry-prometheus", version.ref = "micrometer" }
micrometer-tracing = { group = "io.micrometer", name = "micrometer-tracing", version.ref = "micrometer-tracing" }
micrometer-tracing-brave = { group = "io.micrometer", name = "micrometer-tracing-bridge-brave", version.ref = "micrometer-tracing" }
micrometer-tracing-otel = { group = "io.micrometer", name = "micrometer-tracing-bridge-otel", version.ref = "micrometer-tracing" }
mockito = { group = "org.mockito.kotlin", name = "mockito-kotlin", version.ref = "mockito" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
hessian = { group = "com.caucho", name = "hessian", version.ref = "hessian" }
postgresql = { group = "org.postgresql", name = "postgresql", version = "" }
protobuf-kotlin = { group = "com.google.protobuf", name = "protobuf-kotlin", version.ref = "protobuf-kotlin" }
r2dbc-postgresql = { group = "org.postgresql", name = "r2dbc-postgresql", version.ref = "r2dbc-postgresql" }
r2dbc-proxy = { group = "io.r2dbc", name = "r2dbc-proxy", version = "" }
reactor-test = { group = "io.projectreactor", name = "reactor-test", version = "" }
shedlock-provider-r2dbc = { group = "net.javacrumbs.shedlock", name = "shedlock-provider-r2dbc", version.ref = "shedlock" }
shedlock-spring = { group = "net.javacrumbs.shedlock", name = "shedlock-spring", version.ref = "shedlock" }
spring-boot-starter-actuator = { group = "org.springframework.boot", name = "spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-security = { group = "org.springframework.boot", name = "spring-boot-starter-security", version.ref = "spring-boot" }
spring-security-rsocket = { group = "org.springframework.security", name = "spring-security-rsocket", version.ref = "spring-security" }
spring-boot-starter-aop = { group = "org.springframework.boot", name = "spring-boot-starter-aop", version.ref = "spring-boot" }
spring-boot-starter-cache = { group = "org.springframework.boot", name = "spring-boot-starter-cache", version.ref = "spring-boot" }
spring-boot-starter-data-redis = { group = "org.springframework.boot", name = "spring-boot-starter-data-redis", version.ref = "spring-boot" }
spring-boot-starter-rsocket = { group = "org.springframework.boot", name = "spring-boot-starter-rsocket", version.ref = "spring-boot" }
spring-boot-starter-data-r2dbc = { group = "org.springframework.boot", name = "spring-boot-starter-data-r2dbc", version.ref = "spring-boot" }
spring-boot-starter-mail = { group = "org.springframework.boot", name = "spring-boot-starter-mail", version.ref = "spring-boot" }
spring-boot-starter-validation = { group = "org.springframework.boot", name = "spring-boot-starter-validation", version.ref = "spring-boot" }
spring-boot-starter-webflux = { group = "org.springframework.boot", name = "spring-boot-starter-webflux", version.ref = "spring-boot" }
spring-starter-test = { group = "org.springframework.boot", name = "spring-boot-starter-test", version.ref = "spring-boot" }
springdoc-api = { group = "org.springdoc", name = "springdoc-openapi-starter-webflux-api", version.ref = "springdoc" }
springdoc-ui = { group = "org.springdoc", name = "springdoc-openapi-starter-webflux-ui", version.ref = "springdoc" }
testcontainers-junit = { group = "org.testcontainers", name = "junit-jupiter", version.ref = "testcontainers" }
testcontainers-kafka = { group = "org.testcontainers", name = "kafka", version.ref = "testcontainers" }
testcontainers-postgres = { group = "org.testcontainers", name = "postgresql", version.ref = "testcontainers" }
testcontainers-redis = { group = "com.redis", name = "testcontainers-redis", version.ref = "testcontainers-redis" }
janino = { group = "org.codehaus.janino", name = "janino", version.ref = "janino" }

[bundles]
reactive-service-base = ["logstash-logback-encoder", "spring-boot-starter-webflux", "spring-boot-starter-security", "spring-boot-starter-validation", "spring-boot-starter-cache", "spring-boot-starter-actuator", "spring-boot-starter-aop", "kotlin-coroutines-core", "kotlin-coroutines-reactive", "kotlin-coroutines-reactor", "kotlin-extensions", "kotlin-jackson", "jackson-databind", "jackson-core", "jackson-annotations", "micrometer", "micrometer-registry-prometheus", "micrometer-reactor", "micrometer-tracing", "micrometer-tracing-otel", "micrometer-context-propagation", "janino", "spring-boot-starter-rsocket", "hessian", "spring-security-rsocket", "spring-boot-starter-data-redis"]
reactive-service-test = ["junit-api", "junit-engine", "testcontainers-junit", "testcontainers-redis", "mockito", "mockk", "reactor-test", "awaitility", "spring-starter-test"]
database-postgresql = ["spring-boot-starter-data-r2dbc", "r2dbc-postgresql", "r2dbc-proxy", "flyway-core", "postgresql"]
grpc-client = ["grpc-client-spring-boot-starter", "grpc-kotlin-stub", "protobuf-kotlin"]
grpc-server = ["grpc-spring-boot-starter", "grpc-kotlin-stub"]
shedlock = ["shedlock-spring", "shedlock-provider-r2dbc"]
springdoc = ["springdoc-ui", "springdoc-api"]

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
grpc-compiler = { id = "com.google.protobuf", version = "0.9.4" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }

